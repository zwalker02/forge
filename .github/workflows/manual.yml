name: finance-brief-manual

on:
  workflow_dispatch:
    inputs:
      mode:
        description: "Choose: preview (no email) or send"
        required: true
        default: "preview"
        type: choice
        options: [preview, send]
      period:
        description: "Summary period"
        required: true
        default: "week"
        type: choice
        options: [day, week]
      subject_suffix:
        description: "Optional subject suffix (e.g., 'â€” Special Update')"
        required: false
        type: string
      send_to_self:
        description: "If 'send', override recipients and email just this address (dry-run)"
        required: false
        type: string

jobs:
  run:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps
        run: pip install -r requirements.txt

      - name: Set subject suffix (optional)
        if: ${{ inputs.subject_suffix != '' }}
        run: |
          python - << 'PY'
          import os, yaml
          p = "config.yaml"
          c = yaml.safe_load(open(p))
          c.setdefault("email", {})
          c["email"].setdefault("subject_prefix", "[Weekly Finance Brief]")
          suf = os.environ.get("SUBJECT_SUFFIX","").strip()
          if suf:
            c["email"]["subject_prefix"] = c["email"]["subject_prefix"] + " " + suf
          open(p,"w").write(yaml.safe_dump(c, sort_keys=False))
          print("Applied subject prefix:", c["email"]["subject_prefix"])
          PY
        env:
          SUBJECT_SUFFIX: ${{ inputs.subject_suffix }}

      - name: Build (preview only)
        if: ${{ inputs.mode == 'preview' }}
        run: |
          python summarize.py --period ${{ inputs.period }}
          echo "---- List out dir ----"
          ls -la out || true
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          FINNHUB_API_KEY: ${{ secrets.FINNHUB_API_KEY }}

      - name: Upload preview artifact
        if: ${{ inputs.mode == 'preview' }}
        uses: actions/upload-artifact@v4
        with:
          name: finance-brief-preview
          path: out/latest.html
          if-no-files-found: error

      - name: Apply send_to_self override (send only)
        if: ${{ inputs.mode == 'send' && inputs.send_to_self != '' }}
        run: |
          python - << 'PY'
          import yaml, os
          p = "config.yaml"
          c = yaml.safe_load(open(p))
          addr = os.environ.get("SEND_TO_SELF","").strip()
          if addr:
            c.setdefault("recipients", {})
            c["recipients"]["to"] = [addr]
            c["recipients"]["cc"] = []
            c["recipients"]["bcc"] = []
            open(p,"w").write(yaml.safe_dump(c, sort_keys=False))
            print("Dry-run: sending only to", addr)
          else:
            print("No override provided; using recipients in config.yaml")
          PY
        env:
          SEND_TO_SELF: ${{ inputs.send_to_self }}

      # --- New: SendGrid smoke test so we can see 202 or the exact error ---
      - name: SendGrid smoke test (send only)
        if: ${{ inputs.mode == 'send' }}
        run: |
          python - << 'PY'
          import os
          to = os.environ.get("SEND_TO_SELF") or "zwalker@ucpm.com"
          from sendgrid import SendGridAPIClient
          from sendgrid.helpers.mail import Mail
          key = os.environ.get("SENDGRID_API_KEY")
          from_addr = os.environ.get("SMTP_FROM") or "no-reply@example.com"
          if not key:
            raise SystemExit("Missing SENDGRID_API_KEY")
          message = Mail(
              from_email=from_addr,
              to_emails=[to],
              subject="Forge smoke test",
              html_content="<p>This is a SendGrid smoke test from GitHub Actions.</p>",
          )
          try:
            sg = SendGridAPIClient(key)
            resp = sg.send(message)
            print("SMOKE_STATUS:", resp.status_code)
            print("SMOKE_HEADERS:", dict(getattr(resp, "headers", {})))
          except Exception as e:
            raise SystemExit(f"SMOKE_FAILED: {e}")
          PY
        env:
          SENDGRID_API_KEY: ${{ secrets.SENDGRID_API_KEY }}
          SMTP_FROM: ${{ secrets.SMTP_FROM }}
          SEND_TO_SELF: ${{ inputs.send_to_self }}

      - name: Build & Send (email)
        if: ${{ inputs.mode == 'send' }}
        run: python summarize.py --period ${{ inputs.period }} --send
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          SENDGRID_API_KEY: ${{ secrets.SENDGRID_API_KEY }}
          SMTP_FROM: ${{ secrets.SMTP_FROM }}
          FINNHUB_API_KEY: ${{ secrets.FINNHUB_API_KEY }}
